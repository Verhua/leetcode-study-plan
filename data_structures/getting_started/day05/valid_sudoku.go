package day05

//请你判断一个9x9 的数独是否有效。只需要 根据以下规则 ，验证已经填入的数字是否有效即可。
//
//数字1-9在每一行只能出现一次。
//数字1-9在每一列只能出现一次。
//数字1-9在每一个以粗实线分隔的3x3宫内只能出现一次。（请参考示例图）
//数独部分空格内已填入了数字，空白格用'.'表示。
//
//注意：
//
//一个有效的数独（部分已被填充）不一定是可解的。
//只需要根据以上规则，验证已经填入的数字是否有效即可。

//输入：board =
//[["5","3",".",".","7",".",".",".","."]
//,["6",".",".","1","9","5",".",".","."]
//,[".","9","8",".",".",".",".","6","."]
//,["8",".",".",".","6",".",".",".","3"]
//,["4",".",".","8",".","3",".",".","1"]
//,["7",".",".",".","2",".",".",".","6"]
//,[".","6",".",".",".",".","2","8","."]
//,[".",".",".","4","1","9",".",".","5"]
//,[".",".",".",".","8",".",".","7","9"]]

//输入：board =
//[["8","3",".",".","7",".",".",".","."]
//,["6",".",".","1","9","5",".",".","."]
//,[".","9","8",".",".",".",".","6","."]
//,["8",".",".",".","6",".",".",".","3"]
//,["4",".",".","8",".","3",".",".","1"]
//,["7",".",".",".","2",".",".",".","6"]
//,[".","6",".",".",".",".","2","8","."]
//,[".",".",".","4","1","9",".",".","5"]
//,[".",".",".",".","8",".",".","7","9"]]

// isValidSudoku
// '.' 代表 46
// '0' 代表 48
// '1' 代表 49
// '2' 代表 50
// '3' 代表 51
// '4' 代表 52
// '5' 代表 53
// '6' 代表 54
// '7' 代表 55
// '8' 代表 56
// '9' 代表 57
func isValidSudoku(board [][]byte) bool {
	var rows [9][9]int
	var columns [9][9]int
	var nine [3][3][9]int
	for i := 0; i < 9; i++ {
		for j := 0; j < 9; j++ {
			value := board[i][j]
			if board[i][j] == '.' {
				continue
			}
			count := value - 49
			rows[i][count]++
			columns[j][count]++
			nine[i/3][j/3][count]++
			if rows[i][count] > 1 || columns[j][count] > 1 || nine[i/3][j/3][count] > 1 {
				return false
			}
		}
	}
	return true
}
